/* 
 * Voicify Analytics API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: V1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;


namespace Voicify.Sdk.Core.Models.Model
{
    /// <summary>
    /// ApplicationStatisticsModel
    /// </summary>
    [DataContract]
    public partial class ApplicationStatisticsModel :  IEquatable<ApplicationStatisticsModel>
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ApplicationStatisticsModel" /> class.
        /// </summary>
        /// <param name="applicationId">applicationId.</param>
        /// <param name="totalUsers">totalUsers.</param>
        /// <param name="totalSessions">totalSessions.</param>
        /// <param name="totalRequests">totalRequests.</param>
        /// <param name="totalNewUsers">totalNewUsers.</param>
        public ApplicationStatisticsModel(string applicationId = default(string), long? totalUsers = default(long?), long? totalSessions = default(long?), long? totalRequests = default(long?), long? totalNewUsers = default(long?))
        {
            this.ApplicationId = applicationId;
            this.TotalUsers = totalUsers;
            this.TotalSessions = totalSessions;
            this.TotalRequests = totalRequests;
            this.TotalNewUsers = totalNewUsers;
        }
        
        /// <summary>
        /// Gets or Sets ApplicationId
        /// </summary>
        [DataMember(Name="applicationId", EmitDefaultValue=false)]
        public string ApplicationId { get; set; }

        /// <summary>
        /// Gets or Sets TotalUsers
        /// </summary>
        [DataMember(Name="totalUsers", EmitDefaultValue=false)]
        public long? TotalUsers { get; set; }

        /// <summary>
        /// Gets or Sets TotalSessions
        /// </summary>
        [DataMember(Name="totalSessions", EmitDefaultValue=false)]
        public long? TotalSessions { get; set; }

        /// <summary>
        /// Gets or Sets TotalRequests
        /// </summary>
        [DataMember(Name="totalRequests", EmitDefaultValue=false)]
        public long? TotalRequests { get; set; }

        /// <summary>
        /// Gets or Sets TotalNewUsers
        /// </summary>
        [DataMember(Name="totalNewUsers", EmitDefaultValue=false)]
        public long? TotalNewUsers { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class ApplicationStatisticsModel {\n");
            sb.Append("  ApplicationId: ").Append(ApplicationId).Append("\n");
            sb.Append("  TotalUsers: ").Append(TotalUsers).Append("\n");
            sb.Append("  TotalSessions: ").Append(TotalSessions).Append("\n");
            sb.Append("  TotalRequests: ").Append(TotalRequests).Append("\n");
            sb.Append("  TotalNewUsers: ").Append(TotalNewUsers).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as ApplicationStatisticsModel);
        }

        /// <summary>
        /// Returns true if ApplicationStatisticsModel instances are equal
        /// </summary>
        /// <param name="input">Instance of ApplicationStatisticsModel to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(ApplicationStatisticsModel input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.ApplicationId == input.ApplicationId ||
                    (this.ApplicationId != null &&
                    this.ApplicationId.Equals(input.ApplicationId))
                ) && 
                (
                    this.TotalUsers == input.TotalUsers ||
                    (this.TotalUsers != null &&
                    this.TotalUsers.Equals(input.TotalUsers))
                ) && 
                (
                    this.TotalSessions == input.TotalSessions ||
                    (this.TotalSessions != null &&
                    this.TotalSessions.Equals(input.TotalSessions))
                ) && 
                (
                    this.TotalRequests == input.TotalRequests ||
                    (this.TotalRequests != null &&
                    this.TotalRequests.Equals(input.TotalRequests))
                ) && 
                (
                    this.TotalNewUsers == input.TotalNewUsers ||
                    (this.TotalNewUsers != null &&
                    this.TotalNewUsers.Equals(input.TotalNewUsers))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.ApplicationId != null)
                    hashCode = hashCode * 59 + this.ApplicationId.GetHashCode();
                if (this.TotalUsers != null)
                    hashCode = hashCode * 59 + this.TotalUsers.GetHashCode();
                if (this.TotalSessions != null)
                    hashCode = hashCode * 59 + this.TotalSessions.GetHashCode();
                if (this.TotalRequests != null)
                    hashCode = hashCode * 59 + this.TotalRequests.GetHashCode();
                if (this.TotalNewUsers != null)
                    hashCode = hashCode * 59 + this.TotalNewUsers.GetHashCode();
                return hashCode;
            }
        }

    }

}

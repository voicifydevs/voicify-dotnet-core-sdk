/* 
 * Voicify Integrations API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: V1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;


namespace Voicify.Sdk.Core.Models.Model
{
    /// <summary>
    /// IntegrationConfigurationResultRequest
    /// </summary>
    [DataContract]
    public partial class IntegrationConfigurationResultRequest :  IEquatable<IntegrationConfigurationResultRequest>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="IntegrationConfigurationResultRequest" /> class.
        /// </summary>
        /// <param name="additionalProperties">additionalProperties.</param>
        /// <param name="apiUserId">apiUserId.</param>
        public IntegrationConfigurationResultRequest(Dictionary<string, string> additionalProperties = default(Dictionary<string, string>), string apiUserId = default(string))
        {
            this.AdditionalProperties = additionalProperties;
            this.ApiUserId = apiUserId;
        }
        
        /// <summary>
        /// Gets or Sets AdditionalProperties
        /// </summary>
        [DataMember(Name="additionalProperties", EmitDefaultValue=false)]
        public Dictionary<string, string> AdditionalProperties { get; set; }

        /// <summary>
        /// Gets or Sets ApiUserId
        /// </summary>
        [DataMember(Name="apiUserId", EmitDefaultValue=false)]
        public string ApiUserId { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class IntegrationConfigurationResultRequest {\n");
            sb.Append("  AdditionalProperties: ").Append(AdditionalProperties).Append("\n");
            sb.Append("  ApiUserId: ").Append(ApiUserId).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as IntegrationConfigurationResultRequest);
        }

        /// <summary>
        /// Returns true if IntegrationConfigurationResultRequest instances are equal
        /// </summary>
        /// <param name="input">Instance of IntegrationConfigurationResultRequest to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(IntegrationConfigurationResultRequest input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.AdditionalProperties == input.AdditionalProperties ||
                    this.AdditionalProperties != null &&
                    this.AdditionalProperties.SequenceEqual(input.AdditionalProperties)
                ) && 
                (
                    this.ApiUserId == input.ApiUserId ||
                    (this.ApiUserId != null &&
                    this.ApiUserId.Equals(input.ApiUserId))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.AdditionalProperties != null)
                    hashCode = hashCode * 59 + this.AdditionalProperties.GetHashCode();
                if (this.ApiUserId != null)
                    hashCode = hashCode * 59 + this.ApiUserId.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}

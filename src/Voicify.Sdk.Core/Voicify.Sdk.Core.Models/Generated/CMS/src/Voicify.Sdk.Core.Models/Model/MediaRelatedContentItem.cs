/* 
 * Voicify CMS API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: V1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;


namespace Voicify.Sdk.Core.Models.Model
{
    /// <summary>
    /// MediaRelatedContentItem
    /// </summary>
    [DataContract]
        public partial class MediaRelatedContentItem :  IEquatable<MediaRelatedContentItem>
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="MediaRelatedContentItem" /> class.
        /// </summary>
        /// <param name="name">name.</param>
        /// <param name="applicationFeatureId">applicationFeatureId.</param>
        /// <param name="featureTypeId">featureTypeId.</param>
        /// <param name="contentItemId">contentItemId.</param>
        public MediaRelatedContentItem(string name = default(string), string applicationFeatureId = default(string), string featureTypeId = default(string), string contentItemId = default(string))
        {
            this.Name = name;
            this.ApplicationFeatureId = applicationFeatureId;
            this.FeatureTypeId = featureTypeId;
            this.ContentItemId = contentItemId;
        }
        
        /// <summary>
        /// Gets or Sets Name
        /// </summary>
        [DataMember(Name="name", EmitDefaultValue=false)]
        public string Name { get; set; }

        /// <summary>
        /// Gets or Sets ApplicationFeatureId
        /// </summary>
        [DataMember(Name="applicationFeatureId", EmitDefaultValue=false)]
        public string ApplicationFeatureId { get; set; }

        /// <summary>
        /// Gets or Sets FeatureTypeId
        /// </summary>
        [DataMember(Name="featureTypeId", EmitDefaultValue=false)]
        public string FeatureTypeId { get; set; }

        /// <summary>
        /// Gets or Sets ContentItemId
        /// </summary>
        [DataMember(Name="contentItemId", EmitDefaultValue=false)]
        public string ContentItemId { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class MediaRelatedContentItem {\n");
            sb.Append("  Name: ").Append(Name).Append("\n");
            sb.Append("  ApplicationFeatureId: ").Append(ApplicationFeatureId).Append("\n");
            sb.Append("  FeatureTypeId: ").Append(FeatureTypeId).Append("\n");
            sb.Append("  ContentItemId: ").Append(ContentItemId).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as MediaRelatedContentItem);
        }

        /// <summary>
        /// Returns true if MediaRelatedContentItem instances are equal
        /// </summary>
        /// <param name="input">Instance of MediaRelatedContentItem to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(MediaRelatedContentItem input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Name == input.Name ||
                    (this.Name != null &&
                    this.Name.Equals(input.Name))
                ) && 
                (
                    this.ApplicationFeatureId == input.ApplicationFeatureId ||
                    (this.ApplicationFeatureId != null &&
                    this.ApplicationFeatureId.Equals(input.ApplicationFeatureId))
                ) && 
                (
                    this.FeatureTypeId == input.FeatureTypeId ||
                    (this.FeatureTypeId != null &&
                    this.FeatureTypeId.Equals(input.FeatureTypeId))
                ) && 
                (
                    this.ContentItemId == input.ContentItemId ||
                    (this.ContentItemId != null &&
                    this.ContentItemId.Equals(input.ContentItemId))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Name != null)
                    hashCode = hashCode * 59 + this.Name.GetHashCode();
                if (this.ApplicationFeatureId != null)
                    hashCode = hashCode * 59 + this.ApplicationFeatureId.GetHashCode();
                if (this.FeatureTypeId != null)
                    hashCode = hashCode * 59 + this.FeatureTypeId.GetHashCode();
                if (this.ContentItemId != null)
                    hashCode = hashCode * 59 + this.ContentItemId.GetHashCode();
                return hashCode;
            }
        }

    }
}

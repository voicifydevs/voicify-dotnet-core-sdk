/* 
 * Voicify CMS API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: V1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;


namespace Voicify.Sdk.Core.Models.Model
{
    /// <summary>
    /// UpdateAppliedApplicationTemplateFormRequest
    /// </summary>
    [DataContract]
        public partial class UpdateAppliedApplicationTemplateFormRequest :  IEquatable<UpdateAppliedApplicationTemplateFormRequest>
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="UpdateAppliedApplicationTemplateFormRequest" /> class.
        /// </summary>
        /// <param name="templateFormFieldValues">templateFormFieldValues.</param>
        /// <param name="additionalReplacements">additionalReplacements.</param>
        /// <param name="dynamicFormSections">dynamicFormSections.</param>
        /// <param name="exportModel">exportModel.</param>
        /// <param name="name">name.</param>
        public UpdateAppliedApplicationTemplateFormRequest(List<TemplateFormFieldValueModel> templateFormFieldValues = default(List<TemplateFormFieldValueModel>), Dictionary<string, string> additionalReplacements = default(Dictionary<string, string>), List<DynamicFormSectionModel> dynamicFormSections = default(List<DynamicFormSectionModel>), ExportModel exportModel = default(ExportModel), string name = default(string))
        {
            this.TemplateFormFieldValues = templateFormFieldValues;
            this.AdditionalReplacements = additionalReplacements;
            this.DynamicFormSections = dynamicFormSections;
            this.ExportModel = exportModel;
            this.Name = name;
        }
        
        /// <summary>
        /// Gets or Sets TemplateFormFieldValues
        /// </summary>
        [DataMember(Name="templateFormFieldValues", EmitDefaultValue=false)]
        public List<TemplateFormFieldValueModel> TemplateFormFieldValues { get; set; }

        /// <summary>
        /// Gets or Sets AdditionalReplacements
        /// </summary>
        [DataMember(Name="additionalReplacements", EmitDefaultValue=false)]
        public Dictionary<string, string> AdditionalReplacements { get; set; }

        /// <summary>
        /// Gets or Sets DynamicFormSections
        /// </summary>
        [DataMember(Name="dynamicFormSections", EmitDefaultValue=false)]
        public List<DynamicFormSectionModel> DynamicFormSections { get; set; }

        /// <summary>
        /// Gets or Sets ExportModel
        /// </summary>
        [DataMember(Name="exportModel", EmitDefaultValue=false)]
        public ExportModel ExportModel { get; set; }

        /// <summary>
        /// Gets or Sets Name
        /// </summary>
        [DataMember(Name="name", EmitDefaultValue=false)]
        public string Name { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class UpdateAppliedApplicationTemplateFormRequest {\n");
            sb.Append("  TemplateFormFieldValues: ").Append(TemplateFormFieldValues).Append("\n");
            sb.Append("  AdditionalReplacements: ").Append(AdditionalReplacements).Append("\n");
            sb.Append("  DynamicFormSections: ").Append(DynamicFormSections).Append("\n");
            sb.Append("  ExportModel: ").Append(ExportModel).Append("\n");
            sb.Append("  Name: ").Append(Name).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as UpdateAppliedApplicationTemplateFormRequest);
        }

        /// <summary>
        /// Returns true if UpdateAppliedApplicationTemplateFormRequest instances are equal
        /// </summary>
        /// <param name="input">Instance of UpdateAppliedApplicationTemplateFormRequest to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(UpdateAppliedApplicationTemplateFormRequest input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.TemplateFormFieldValues == input.TemplateFormFieldValues ||
                    this.TemplateFormFieldValues != null &&
                    input.TemplateFormFieldValues != null &&
                    this.TemplateFormFieldValues.SequenceEqual(input.TemplateFormFieldValues)
                ) && 
                (
                    this.AdditionalReplacements == input.AdditionalReplacements ||
                    this.AdditionalReplacements != null &&
                    input.AdditionalReplacements != null &&
                    this.AdditionalReplacements.SequenceEqual(input.AdditionalReplacements)
                ) && 
                (
                    this.DynamicFormSections == input.DynamicFormSections ||
                    this.DynamicFormSections != null &&
                    input.DynamicFormSections != null &&
                    this.DynamicFormSections.SequenceEqual(input.DynamicFormSections)
                ) && 
                (
                    this.ExportModel == input.ExportModel ||
                    (this.ExportModel != null &&
                    this.ExportModel.Equals(input.ExportModel))
                ) && 
                (
                    this.Name == input.Name ||
                    (this.Name != null &&
                    this.Name.Equals(input.Name))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.TemplateFormFieldValues != null)
                    hashCode = hashCode * 59 + this.TemplateFormFieldValues.GetHashCode();
                if (this.AdditionalReplacements != null)
                    hashCode = hashCode * 59 + this.AdditionalReplacements.GetHashCode();
                if (this.DynamicFormSections != null)
                    hashCode = hashCode * 59 + this.DynamicFormSections.GetHashCode();
                if (this.ExportModel != null)
                    hashCode = hashCode * 59 + this.ExportModel.GetHashCode();
                if (this.Name != null)
                    hashCode = hashCode * 59 + this.Name.GetHashCode();
                return hashCode;
            }
        }

    }
}

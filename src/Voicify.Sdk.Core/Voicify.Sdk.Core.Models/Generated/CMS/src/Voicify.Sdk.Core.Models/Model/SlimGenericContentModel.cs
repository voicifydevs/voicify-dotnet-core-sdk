/* 
 * Voicify CMS API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: V1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;


namespace Voicify.Sdk.Core.Models.Model
{
    /// <summary>
    /// SlimGenericContentModel
    /// </summary>
    [DataContract]
        public partial class SlimGenericContentModel :  IEquatable<SlimGenericContentModel>
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="SlimGenericContentModel" /> class.
        /// </summary>
        /// <param name="applicationFeatureId">applicationFeatureId.</param>
        /// <param name="id">id.</param>
        /// <param name="isLive">isLive.</param>
        /// <param name="title">title.</param>
        /// <param name="featureTypeId">featureTypeId.</param>
        public SlimGenericContentModel(string applicationFeatureId = default(string), string id = default(string), bool? isLive = default(bool?), string title = default(string), string featureTypeId = default(string))
        {
            this.ApplicationFeatureId = applicationFeatureId;
            this.Id = id;
            this.IsLive = isLive;
            this.Title = title;
            this.FeatureTypeId = featureTypeId;
        }
        
        /// <summary>
        /// Gets or Sets ApplicationFeatureId
        /// </summary>
        [DataMember(Name="applicationFeatureId", EmitDefaultValue=false)]
        public string ApplicationFeatureId { get; set; }

        /// <summary>
        /// Gets or Sets Id
        /// </summary>
        [DataMember(Name="id", EmitDefaultValue=false)]
        public string Id { get; set; }

        /// <summary>
        /// Gets or Sets IsLive
        /// </summary>
        [DataMember(Name="isLive", EmitDefaultValue=false)]
        public bool? IsLive { get; set; }

        /// <summary>
        /// Gets or Sets Title
        /// </summary>
        [DataMember(Name="title", EmitDefaultValue=false)]
        public string Title { get; set; }

        /// <summary>
        /// Gets or Sets FeatureTypeId
        /// </summary>
        [DataMember(Name="featureTypeId", EmitDefaultValue=false)]
        public string FeatureTypeId { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class SlimGenericContentModel {\n");
            sb.Append("  ApplicationFeatureId: ").Append(ApplicationFeatureId).Append("\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  IsLive: ").Append(IsLive).Append("\n");
            sb.Append("  Title: ").Append(Title).Append("\n");
            sb.Append("  FeatureTypeId: ").Append(FeatureTypeId).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as SlimGenericContentModel);
        }

        /// <summary>
        /// Returns true if SlimGenericContentModel instances are equal
        /// </summary>
        /// <param name="input">Instance of SlimGenericContentModel to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(SlimGenericContentModel input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.ApplicationFeatureId == input.ApplicationFeatureId ||
                    (this.ApplicationFeatureId != null &&
                    this.ApplicationFeatureId.Equals(input.ApplicationFeatureId))
                ) && 
                (
                    this.Id == input.Id ||
                    (this.Id != null &&
                    this.Id.Equals(input.Id))
                ) && 
                (
                    this.IsLive == input.IsLive ||
                    (this.IsLive != null &&
                    this.IsLive.Equals(input.IsLive))
                ) && 
                (
                    this.Title == input.Title ||
                    (this.Title != null &&
                    this.Title.Equals(input.Title))
                ) && 
                (
                    this.FeatureTypeId == input.FeatureTypeId ||
                    (this.FeatureTypeId != null &&
                    this.FeatureTypeId.Equals(input.FeatureTypeId))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.ApplicationFeatureId != null)
                    hashCode = hashCode * 59 + this.ApplicationFeatureId.GetHashCode();
                if (this.Id != null)
                    hashCode = hashCode * 59 + this.Id.GetHashCode();
                if (this.IsLive != null)
                    hashCode = hashCode * 59 + this.IsLive.GetHashCode();
                if (this.Title != null)
                    hashCode = hashCode * 59 + this.Title.GetHashCode();
                if (this.FeatureTypeId != null)
                    hashCode = hashCode * 59 + this.FeatureTypeId.GetHashCode();
                return hashCode;
            }
        }

    }
}

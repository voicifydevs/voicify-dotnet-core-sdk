/* 
 * Voicify CMS API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: V1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;


namespace Voicify.Sdk.Core.Models.Model
{
    /// <summary>
    /// ApplicationFulfillmentEndpoints
    /// </summary>
    [DataContract]
    public partial class ApplicationFulfillmentEndpoints :  IEquatable<ApplicationFulfillmentEndpoints>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ApplicationFulfillmentEndpoints" /> class.
        /// </summary>
        /// <param name="applicationId">applicationId.</param>
        /// <param name="alexaEndpoint">alexaEndpoint.</param>
        /// <param name="alexaProxyEndpoint">alexaProxyEndpoint.</param>
        /// <param name="dialogFlowEndpoint">dialogFlowEndpoint.</param>
        /// <param name="botServiceEndpoint">botServiceEndpoint.</param>
        /// <param name="bixbyEndpoint">bixbyEndpoint.</param>
        /// <param name="customAssistantEndpoint">customAssistantEndpoint.</param>
        public ApplicationFulfillmentEndpoints(string applicationId = default(string), string alexaEndpoint = default(string), string alexaProxyEndpoint = default(string), string dialogFlowEndpoint = default(string), string botServiceEndpoint = default(string), string bixbyEndpoint = default(string), string customAssistantEndpoint = default(string))
        {
            this.ApplicationId = applicationId;
            this.AlexaEndpoint = alexaEndpoint;
            this.AlexaProxyEndpoint = alexaProxyEndpoint;
            this.DialogFlowEndpoint = dialogFlowEndpoint;
            this.BotServiceEndpoint = botServiceEndpoint;
            this.BixbyEndpoint = bixbyEndpoint;
            this.CustomAssistantEndpoint = customAssistantEndpoint;
        }
        
        /// <summary>
        /// Gets or Sets ApplicationId
        /// </summary>
        [DataMember(Name="applicationId", EmitDefaultValue=false)]
        public string ApplicationId { get; set; }

        /// <summary>
        /// Gets or Sets AlexaEndpoint
        /// </summary>
        [DataMember(Name="alexaEndpoint", EmitDefaultValue=false)]
        public string AlexaEndpoint { get; set; }

        /// <summary>
        /// Gets or Sets AlexaProxyEndpoint
        /// </summary>
        [DataMember(Name="alexaProxyEndpoint", EmitDefaultValue=false)]
        public string AlexaProxyEndpoint { get; set; }

        /// <summary>
        /// Gets or Sets DialogFlowEndpoint
        /// </summary>
        [DataMember(Name="dialogFlowEndpoint", EmitDefaultValue=false)]
        public string DialogFlowEndpoint { get; set; }

        /// <summary>
        /// Gets or Sets BotServiceEndpoint
        /// </summary>
        [DataMember(Name="botServiceEndpoint", EmitDefaultValue=false)]
        public string BotServiceEndpoint { get; set; }

        /// <summary>
        /// Gets or Sets BixbyEndpoint
        /// </summary>
        [DataMember(Name="bixbyEndpoint", EmitDefaultValue=false)]
        public string BixbyEndpoint { get; set; }

        /// <summary>
        /// Gets or Sets CustomAssistantEndpoint
        /// </summary>
        [DataMember(Name="customAssistantEndpoint", EmitDefaultValue=false)]
        public string CustomAssistantEndpoint { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class ApplicationFulfillmentEndpoints {\n");
            sb.Append("  ApplicationId: ").Append(ApplicationId).Append("\n");
            sb.Append("  AlexaEndpoint: ").Append(AlexaEndpoint).Append("\n");
            sb.Append("  AlexaProxyEndpoint: ").Append(AlexaProxyEndpoint).Append("\n");
            sb.Append("  DialogFlowEndpoint: ").Append(DialogFlowEndpoint).Append("\n");
            sb.Append("  BotServiceEndpoint: ").Append(BotServiceEndpoint).Append("\n");
            sb.Append("  BixbyEndpoint: ").Append(BixbyEndpoint).Append("\n");
            sb.Append("  CustomAssistantEndpoint: ").Append(CustomAssistantEndpoint).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as ApplicationFulfillmentEndpoints);
        }

        /// <summary>
        /// Returns true if ApplicationFulfillmentEndpoints instances are equal
        /// </summary>
        /// <param name="input">Instance of ApplicationFulfillmentEndpoints to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(ApplicationFulfillmentEndpoints input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.ApplicationId == input.ApplicationId ||
                    (this.ApplicationId != null &&
                    this.ApplicationId.Equals(input.ApplicationId))
                ) && 
                (
                    this.AlexaEndpoint == input.AlexaEndpoint ||
                    (this.AlexaEndpoint != null &&
                    this.AlexaEndpoint.Equals(input.AlexaEndpoint))
                ) && 
                (
                    this.AlexaProxyEndpoint == input.AlexaProxyEndpoint ||
                    (this.AlexaProxyEndpoint != null &&
                    this.AlexaProxyEndpoint.Equals(input.AlexaProxyEndpoint))
                ) && 
                (
                    this.DialogFlowEndpoint == input.DialogFlowEndpoint ||
                    (this.DialogFlowEndpoint != null &&
                    this.DialogFlowEndpoint.Equals(input.DialogFlowEndpoint))
                ) && 
                (
                    this.BotServiceEndpoint == input.BotServiceEndpoint ||
                    (this.BotServiceEndpoint != null &&
                    this.BotServiceEndpoint.Equals(input.BotServiceEndpoint))
                ) && 
                (
                    this.BixbyEndpoint == input.BixbyEndpoint ||
                    (this.BixbyEndpoint != null &&
                    this.BixbyEndpoint.Equals(input.BixbyEndpoint))
                ) && 
                (
                    this.CustomAssistantEndpoint == input.CustomAssistantEndpoint ||
                    (this.CustomAssistantEndpoint != null &&
                    this.CustomAssistantEndpoint.Equals(input.CustomAssistantEndpoint))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.ApplicationId != null)
                    hashCode = hashCode * 59 + this.ApplicationId.GetHashCode();
                if (this.AlexaEndpoint != null)
                    hashCode = hashCode * 59 + this.AlexaEndpoint.GetHashCode();
                if (this.AlexaProxyEndpoint != null)
                    hashCode = hashCode * 59 + this.AlexaProxyEndpoint.GetHashCode();
                if (this.DialogFlowEndpoint != null)
                    hashCode = hashCode * 59 + this.DialogFlowEndpoint.GetHashCode();
                if (this.BotServiceEndpoint != null)
                    hashCode = hashCode * 59 + this.BotServiceEndpoint.GetHashCode();
                if (this.BixbyEndpoint != null)
                    hashCode = hashCode * 59 + this.BixbyEndpoint.GetHashCode();
                if (this.CustomAssistantEndpoint != null)
                    hashCode = hashCode * 59 + this.CustomAssistantEndpoint.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}

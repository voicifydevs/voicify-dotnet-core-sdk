/* 
 * Voicify CMS API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: V1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;


namespace Voicify.Sdk.Core.Models.Model
{
    /// <summary>
    /// AppliedApplicationTemplateFormModel
    /// </summary>
    [DataContract]
    public partial class AppliedApplicationTemplateFormModel :  IEquatable<AppliedApplicationTemplateFormModel>
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="AppliedApplicationTemplateFormModel" /> class.
        /// </summary>
        /// <param name="id">id.</param>
        /// <param name="createdDate">createdDate.</param>
        /// <param name="modifiedDate">modifiedDate.</param>
        /// <param name="createdByUserId">createdByUserId.</param>
        /// <param name="modifiedByUserId">modifiedByUserId.</param>
        /// <param name="templateFormId">templateFormId.</param>
        /// <param name="appliedApplicationId">appliedApplicationId.</param>
        /// <param name="lastSyncedDate">lastSyncedDate.</param>
        /// <param name="templateForm">templateForm.</param>
        /// <param name="templateFormFieldValues">templateFormFieldValues.</param>
        public AppliedApplicationTemplateFormModel(string id = default(string), DateTime? createdDate = default(DateTime?), DateTime? modifiedDate = default(DateTime?), string createdByUserId = default(string), string modifiedByUserId = default(string), string templateFormId = default(string), string appliedApplicationId = default(string), DateTime? lastSyncedDate = default(DateTime?), TemplateFormWithConfigurationModel templateForm = default(TemplateFormWithConfigurationModel), List<TemplateFormFieldValueModel> templateFormFieldValues = default(List<TemplateFormFieldValueModel>))
        {
            this.Id = id;
            this.CreatedDate = createdDate;
            this.ModifiedDate = modifiedDate;
            this.CreatedByUserId = createdByUserId;
            this.ModifiedByUserId = modifiedByUserId;
            this.TemplateFormId = templateFormId;
            this.AppliedApplicationId = appliedApplicationId;
            this.LastSyncedDate = lastSyncedDate;
            this.TemplateForm = templateForm;
            this.TemplateFormFieldValues = templateFormFieldValues;
        }
        
        /// <summary>
        /// Gets or Sets Id
        /// </summary>
        [DataMember(Name="id", EmitDefaultValue=false)]
        public string Id { get; set; }

        /// <summary>
        /// Gets or Sets CreatedDate
        /// </summary>
        [DataMember(Name="createdDate", EmitDefaultValue=false)]
        public DateTime? CreatedDate { get; set; }

        /// <summary>
        /// Gets or Sets ModifiedDate
        /// </summary>
        [DataMember(Name="modifiedDate", EmitDefaultValue=false)]
        public DateTime? ModifiedDate { get; set; }

        /// <summary>
        /// Gets or Sets CreatedByUserId
        /// </summary>
        [DataMember(Name="createdByUserId", EmitDefaultValue=false)]
        public string CreatedByUserId { get; set; }

        /// <summary>
        /// Gets or Sets ModifiedByUserId
        /// </summary>
        [DataMember(Name="modifiedByUserId", EmitDefaultValue=false)]
        public string ModifiedByUserId { get; set; }

        /// <summary>
        /// Gets or Sets TemplateFormId
        /// </summary>
        [DataMember(Name="templateFormId", EmitDefaultValue=false)]
        public string TemplateFormId { get; set; }

        /// <summary>
        /// Gets or Sets AppliedApplicationId
        /// </summary>
        [DataMember(Name="appliedApplicationId", EmitDefaultValue=false)]
        public string AppliedApplicationId { get; set; }

        /// <summary>
        /// Gets or Sets LastSyncedDate
        /// </summary>
        [DataMember(Name="lastSyncedDate", EmitDefaultValue=false)]
        public DateTime? LastSyncedDate { get; set; }

        /// <summary>
        /// Gets or Sets TemplateForm
        /// </summary>
        [DataMember(Name="templateForm", EmitDefaultValue=false)]
        public TemplateFormWithConfigurationModel TemplateForm { get; set; }

        /// <summary>
        /// Gets or Sets TemplateFormFieldValues
        /// </summary>
        [DataMember(Name="templateFormFieldValues", EmitDefaultValue=false)]
        public List<TemplateFormFieldValueModel> TemplateFormFieldValues { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class AppliedApplicationTemplateFormModel {\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  CreatedDate: ").Append(CreatedDate).Append("\n");
            sb.Append("  ModifiedDate: ").Append(ModifiedDate).Append("\n");
            sb.Append("  CreatedByUserId: ").Append(CreatedByUserId).Append("\n");
            sb.Append("  ModifiedByUserId: ").Append(ModifiedByUserId).Append("\n");
            sb.Append("  TemplateFormId: ").Append(TemplateFormId).Append("\n");
            sb.Append("  AppliedApplicationId: ").Append(AppliedApplicationId).Append("\n");
            sb.Append("  LastSyncedDate: ").Append(LastSyncedDate).Append("\n");
            sb.Append("  TemplateForm: ").Append(TemplateForm).Append("\n");
            sb.Append("  TemplateFormFieldValues: ").Append(TemplateFormFieldValues).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as AppliedApplicationTemplateFormModel);
        }

        /// <summary>
        /// Returns true if AppliedApplicationTemplateFormModel instances are equal
        /// </summary>
        /// <param name="input">Instance of AppliedApplicationTemplateFormModel to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(AppliedApplicationTemplateFormModel input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Id == input.Id ||
                    (this.Id != null &&
                    this.Id.Equals(input.Id))
                ) && 
                (
                    this.CreatedDate == input.CreatedDate ||
                    (this.CreatedDate != null &&
                    this.CreatedDate.Equals(input.CreatedDate))
                ) && 
                (
                    this.ModifiedDate == input.ModifiedDate ||
                    (this.ModifiedDate != null &&
                    this.ModifiedDate.Equals(input.ModifiedDate))
                ) && 
                (
                    this.CreatedByUserId == input.CreatedByUserId ||
                    (this.CreatedByUserId != null &&
                    this.CreatedByUserId.Equals(input.CreatedByUserId))
                ) && 
                (
                    this.ModifiedByUserId == input.ModifiedByUserId ||
                    (this.ModifiedByUserId != null &&
                    this.ModifiedByUserId.Equals(input.ModifiedByUserId))
                ) && 
                (
                    this.TemplateFormId == input.TemplateFormId ||
                    (this.TemplateFormId != null &&
                    this.TemplateFormId.Equals(input.TemplateFormId))
                ) && 
                (
                    this.AppliedApplicationId == input.AppliedApplicationId ||
                    (this.AppliedApplicationId != null &&
                    this.AppliedApplicationId.Equals(input.AppliedApplicationId))
                ) && 
                (
                    this.LastSyncedDate == input.LastSyncedDate ||
                    (this.LastSyncedDate != null &&
                    this.LastSyncedDate.Equals(input.LastSyncedDate))
                ) && 
                (
                    this.TemplateForm == input.TemplateForm ||
                    (this.TemplateForm != null &&
                    this.TemplateForm.Equals(input.TemplateForm))
                ) && 
                (
                    this.TemplateFormFieldValues == input.TemplateFormFieldValues ||
                    this.TemplateFormFieldValues != null &&
                    this.TemplateFormFieldValues.SequenceEqual(input.TemplateFormFieldValues)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Id != null)
                    hashCode = hashCode * 59 + this.Id.GetHashCode();
                if (this.CreatedDate != null)
                    hashCode = hashCode * 59 + this.CreatedDate.GetHashCode();
                if (this.ModifiedDate != null)
                    hashCode = hashCode * 59 + this.ModifiedDate.GetHashCode();
                if (this.CreatedByUserId != null)
                    hashCode = hashCode * 59 + this.CreatedByUserId.GetHashCode();
                if (this.ModifiedByUserId != null)
                    hashCode = hashCode * 59 + this.ModifiedByUserId.GetHashCode();
                if (this.TemplateFormId != null)
                    hashCode = hashCode * 59 + this.TemplateFormId.GetHashCode();
                if (this.AppliedApplicationId != null)
                    hashCode = hashCode * 59 + this.AppliedApplicationId.GetHashCode();
                if (this.LastSyncedDate != null)
                    hashCode = hashCode * 59 + this.LastSyncedDate.GetHashCode();
                if (this.TemplateForm != null)
                    hashCode = hashCode * 59 + this.TemplateForm.GetHashCode();
                if (this.TemplateFormFieldValues != null)
                    hashCode = hashCode * 59 + this.TemplateFormFieldValues.GetHashCode();
                return hashCode;
            }
        }

    }

}

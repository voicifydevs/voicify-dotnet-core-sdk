/* 
 * Voicify CMS API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: V1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;


namespace Voicify.Sdk.Core.Models.Model
{
    /// <summary>
    /// NewArchiveRequest
    /// </summary>
    [DataContract]
        public partial class NewArchiveRequest :  IEquatable<NewArchiveRequest>
    {
        /// <summary>
        /// Gets or Sets ArchiveType
        /// </summary>
        [DataMember(Name="archiveType", EmitDefaultValue=false)]
        public ArchiveType? ArchiveType { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="NewArchiveRequest" /> class.
        /// </summary>
        /// <param name="applicationId">applicationId.</param>
        /// <param name="archiveType">archiveType.</param>
        /// <param name="name">name.</param>
        /// <param name="bulkContentRequest">bulkContentRequest.</param>
        public NewArchiveRequest(string applicationId = default(string), ArchiveType? archiveType = default(ArchiveType?), string name = default(string), BulkContentRequest bulkContentRequest = default(BulkContentRequest))
        {
            this.ApplicationId = applicationId;
            this.ArchiveType = archiveType;
            this.Name = name;
            this.BulkContentRequest = bulkContentRequest;
        }
        
        /// <summary>
        /// Gets or Sets ApplicationId
        /// </summary>
        [DataMember(Name="applicationId", EmitDefaultValue=false)]
        public string ApplicationId { get; set; }


        /// <summary>
        /// Gets or Sets Name
        /// </summary>
        [DataMember(Name="name", EmitDefaultValue=false)]
        public string Name { get; set; }

        /// <summary>
        /// Gets or Sets BulkContentRequest
        /// </summary>
        [DataMember(Name="bulkContentRequest", EmitDefaultValue=false)]
        public BulkContentRequest BulkContentRequest { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class NewArchiveRequest {\n");
            sb.Append("  ApplicationId: ").Append(ApplicationId).Append("\n");
            sb.Append("  ArchiveType: ").Append(ArchiveType).Append("\n");
            sb.Append("  Name: ").Append(Name).Append("\n");
            sb.Append("  BulkContentRequest: ").Append(BulkContentRequest).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as NewArchiveRequest);
        }

        /// <summary>
        /// Returns true if NewArchiveRequest instances are equal
        /// </summary>
        /// <param name="input">Instance of NewArchiveRequest to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(NewArchiveRequest input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.ApplicationId == input.ApplicationId ||
                    (this.ApplicationId != null &&
                    this.ApplicationId.Equals(input.ApplicationId))
                ) && 
                (
                    this.ArchiveType == input.ArchiveType ||
                    (this.ArchiveType != null &&
                    this.ArchiveType.Equals(input.ArchiveType))
                ) && 
                (
                    this.Name == input.Name ||
                    (this.Name != null &&
                    this.Name.Equals(input.Name))
                ) && 
                (
                    this.BulkContentRequest == input.BulkContentRequest ||
                    (this.BulkContentRequest != null &&
                    this.BulkContentRequest.Equals(input.BulkContentRequest))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.ApplicationId != null)
                    hashCode = hashCode * 59 + this.ApplicationId.GetHashCode();
                if (this.ArchiveType != null)
                    hashCode = hashCode * 59 + this.ArchiveType.GetHashCode();
                if (this.Name != null)
                    hashCode = hashCode * 59 + this.Name.GetHashCode();
                if (this.BulkContentRequest != null)
                    hashCode = hashCode * 59 + this.BulkContentRequest.GetHashCode();
                return hashCode;
            }
        }

    }
}

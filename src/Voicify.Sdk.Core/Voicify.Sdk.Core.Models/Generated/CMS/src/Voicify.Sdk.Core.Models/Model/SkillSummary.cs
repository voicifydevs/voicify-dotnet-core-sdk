/* 
 * Voicify CMS API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: V1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;


namespace Voicify.Sdk.Core.Models.Model
{
    /// <summary>
    /// SkillSummary
    /// </summary>
    [DataContract]
        public partial class SkillSummary :  IEquatable<SkillSummary>
    {
        /// <summary>
        /// Gets or Sets Stage
        /// </summary>
        [DataMember(Name="stage", EmitDefaultValue=false)]
        public SkillStage? Stage { get; set; }
        /// <summary>
        /// Gets or Sets PublicationStatus
        /// </summary>
        [DataMember(Name="publicationStatus", EmitDefaultValue=false)]
        public PublicationStatus? PublicationStatus { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="SkillSummary" /> class.
        /// </summary>
        /// <param name="lastUpdated">lastUpdated.</param>
        /// <param name="nameByLocale">nameByLocale.</param>
        /// <param name="stage">stage.</param>
        /// <param name="apis">apis.</param>
        /// <param name="publicationStatus">publicationStatus.</param>
        /// <param name="skillId">skillId.</param>
        /// <param name="links">links.</param>
        public SkillSummary(DateTime? lastUpdated = default(DateTime?), Dictionary<string, string> nameByLocale = default(Dictionary<string, string>), SkillStage? stage = default(SkillStage?), List<string> apis = default(List<string>), PublicationStatus? publicationStatus = default(PublicationStatus?), string skillId = default(string), Dictionary<string, ApiLink> links = default(Dictionary<string, ApiLink>))
        {
            this.LastUpdated = lastUpdated;
            this.NameByLocale = nameByLocale;
            this.Stage = stage;
            this.Apis = apis;
            this.PublicationStatus = publicationStatus;
            this.SkillId = skillId;
            this.Links = links;
        }
        
        /// <summary>
        /// Gets or Sets LastUpdated
        /// </summary>
        [DataMember(Name="lastUpdated", EmitDefaultValue=false)]
        public DateTime? LastUpdated { get; set; }

        /// <summary>
        /// Gets or Sets NameByLocale
        /// </summary>
        [DataMember(Name="nameByLocale", EmitDefaultValue=false)]
        public Dictionary<string, string> NameByLocale { get; set; }


        /// <summary>
        /// Gets or Sets Apis
        /// </summary>
        [DataMember(Name="apis", EmitDefaultValue=false)]
        public List<string> Apis { get; set; }


        /// <summary>
        /// Gets or Sets SkillId
        /// </summary>
        [DataMember(Name="skillId", EmitDefaultValue=false)]
        public string SkillId { get; set; }

        /// <summary>
        /// Gets or Sets Links
        /// </summary>
        [DataMember(Name="_links", EmitDefaultValue=false)]
        public Dictionary<string, ApiLink> Links { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class SkillSummary {\n");
            sb.Append("  LastUpdated: ").Append(LastUpdated).Append("\n");
            sb.Append("  NameByLocale: ").Append(NameByLocale).Append("\n");
            sb.Append("  Stage: ").Append(Stage).Append("\n");
            sb.Append("  Apis: ").Append(Apis).Append("\n");
            sb.Append("  PublicationStatus: ").Append(PublicationStatus).Append("\n");
            sb.Append("  SkillId: ").Append(SkillId).Append("\n");
            sb.Append("  Links: ").Append(Links).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as SkillSummary);
        }

        /// <summary>
        /// Returns true if SkillSummary instances are equal
        /// </summary>
        /// <param name="input">Instance of SkillSummary to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(SkillSummary input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.LastUpdated == input.LastUpdated ||
                    (this.LastUpdated != null &&
                    this.LastUpdated.Equals(input.LastUpdated))
                ) && 
                (
                    this.NameByLocale == input.NameByLocale ||
                    this.NameByLocale != null &&
                    input.NameByLocale != null &&
                    this.NameByLocale.SequenceEqual(input.NameByLocale)
                ) && 
                (
                    this.Stage == input.Stage ||
                    (this.Stage != null &&
                    this.Stage.Equals(input.Stage))
                ) && 
                (
                    this.Apis == input.Apis ||
                    this.Apis != null &&
                    input.Apis != null &&
                    this.Apis.SequenceEqual(input.Apis)
                ) && 
                (
                    this.PublicationStatus == input.PublicationStatus ||
                    (this.PublicationStatus != null &&
                    this.PublicationStatus.Equals(input.PublicationStatus))
                ) && 
                (
                    this.SkillId == input.SkillId ||
                    (this.SkillId != null &&
                    this.SkillId.Equals(input.SkillId))
                ) && 
                (
                    this.Links == input.Links ||
                    this.Links != null &&
                    input.Links != null &&
                    this.Links.SequenceEqual(input.Links)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.LastUpdated != null)
                    hashCode = hashCode * 59 + this.LastUpdated.GetHashCode();
                if (this.NameByLocale != null)
                    hashCode = hashCode * 59 + this.NameByLocale.GetHashCode();
                if (this.Stage != null)
                    hashCode = hashCode * 59 + this.Stage.GetHashCode();
                if (this.Apis != null)
                    hashCode = hashCode * 59 + this.Apis.GetHashCode();
                if (this.PublicationStatus != null)
                    hashCode = hashCode * 59 + this.PublicationStatus.GetHashCode();
                if (this.SkillId != null)
                    hashCode = hashCode * 59 + this.SkillId.GetHashCode();
                if (this.Links != null)
                    hashCode = hashCode * 59 + this.Links.GetHashCode();
                return hashCode;
            }
        }

    }
}

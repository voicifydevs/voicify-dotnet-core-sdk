/* 
 * Voicify CMS API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: V1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;


namespace Voicify.Sdk.Core.Models.Model
{
    /// <summary>
    /// LuisAppEndpoint
    /// </summary>
    [DataContract]
    public partial class LuisAppEndpoint :  IEquatable<LuisAppEndpoint>
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="LuisAppEndpoint" /> class.
        /// </summary>
        /// <param name="endpointRegion">endpointRegion.</param>
        /// <param name="endpointUrl">endpointUrl.</param>
        /// <param name="versionId">versionId.</param>
        public LuisAppEndpoint(string endpointRegion = default(string), string endpointUrl = default(string), string versionId = default(string))
        {
            this.EndpointRegion = endpointRegion;
            this.EndpointUrl = endpointUrl;
            this.VersionId = versionId;
        }
        
        /// <summary>
        /// Gets or Sets EndpointRegion
        /// </summary>
        [DataMember(Name="endpointRegion", EmitDefaultValue=false)]
        public string EndpointRegion { get; set; }

        /// <summary>
        /// Gets or Sets EndpointUrl
        /// </summary>
        [DataMember(Name="endpointUrl", EmitDefaultValue=false)]
        public string EndpointUrl { get; set; }

        /// <summary>
        /// Gets or Sets VersionId
        /// </summary>
        [DataMember(Name="versionId", EmitDefaultValue=false)]
        public string VersionId { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class LuisAppEndpoint {\n");
            sb.Append("  EndpointRegion: ").Append(EndpointRegion).Append("\n");
            sb.Append("  EndpointUrl: ").Append(EndpointUrl).Append("\n");
            sb.Append("  VersionId: ").Append(VersionId).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as LuisAppEndpoint);
        }

        /// <summary>
        /// Returns true if LuisAppEndpoint instances are equal
        /// </summary>
        /// <param name="input">Instance of LuisAppEndpoint to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(LuisAppEndpoint input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.EndpointRegion == input.EndpointRegion ||
                    (this.EndpointRegion != null &&
                    this.EndpointRegion.Equals(input.EndpointRegion))
                ) && 
                (
                    this.EndpointUrl == input.EndpointUrl ||
                    (this.EndpointUrl != null &&
                    this.EndpointUrl.Equals(input.EndpointUrl))
                ) && 
                (
                    this.VersionId == input.VersionId ||
                    (this.VersionId != null &&
                    this.VersionId.Equals(input.VersionId))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.EndpointRegion != null)
                    hashCode = hashCode * 59 + this.EndpointRegion.GetHashCode();
                if (this.EndpointUrl != null)
                    hashCode = hashCode * 59 + this.EndpointUrl.GetHashCode();
                if (this.VersionId != null)
                    hashCode = hashCode * 59 + this.VersionId.GetHashCode();
                return hashCode;
            }
        }

    }

}

/* 
 * Voicify CMS API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: V1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;


namespace Voicify.Sdk.Core.Models.Model
{
    /// <summary>
    /// BasicInvitationRequest
    /// </summary>
    [DataContract]
        public partial class BasicInvitationRequest :  IEquatable<BasicInvitationRequest>
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="BasicInvitationRequest" /> class.
        /// </summary>
        /// <param name="email">email (required).</param>
        /// <param name="isAdmin">isAdmin (required).</param>
        /// <param name="isAddedToApplications">isAddedToApplications.</param>
        /// <param name="applicationRoleId">applicationRoleId.</param>
        public BasicInvitationRequest(string email = default(string), bool? isAdmin = default(bool?), bool? isAddedToApplications = default(bool?), string applicationRoleId = default(string))
        {
            // to ensure "email" is required (not null)
            if (email == null)
            {
                throw new InvalidDataException("email is a required property for BasicInvitationRequest and cannot be null");
            }
            else
            {
                this.Email = email;
            }
            // to ensure "isAdmin" is required (not null)
            if (isAdmin == null)
            {
                throw new InvalidDataException("isAdmin is a required property for BasicInvitationRequest and cannot be null");
            }
            else
            {
                this.IsAdmin = isAdmin;
            }
            this.IsAddedToApplications = isAddedToApplications;
            this.ApplicationRoleId = applicationRoleId;
        }
        
        /// <summary>
        /// Gets or Sets Email
        /// </summary>
        [DataMember(Name="email", EmitDefaultValue=false)]
        public string Email { get; set; }

        /// <summary>
        /// Gets or Sets IsAdmin
        /// </summary>
        [DataMember(Name="isAdmin", EmitDefaultValue=false)]
        public bool? IsAdmin { get; set; }

        /// <summary>
        /// Gets or Sets IsAddedToApplications
        /// </summary>
        [DataMember(Name="isAddedToApplications", EmitDefaultValue=false)]
        public bool? IsAddedToApplications { get; set; }

        /// <summary>
        /// Gets or Sets ApplicationRoleId
        /// </summary>
        [DataMember(Name="applicationRoleId", EmitDefaultValue=false)]
        public string ApplicationRoleId { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class BasicInvitationRequest {\n");
            sb.Append("  Email: ").Append(Email).Append("\n");
            sb.Append("  IsAdmin: ").Append(IsAdmin).Append("\n");
            sb.Append("  IsAddedToApplications: ").Append(IsAddedToApplications).Append("\n");
            sb.Append("  ApplicationRoleId: ").Append(ApplicationRoleId).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as BasicInvitationRequest);
        }

        /// <summary>
        /// Returns true if BasicInvitationRequest instances are equal
        /// </summary>
        /// <param name="input">Instance of BasicInvitationRequest to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(BasicInvitationRequest input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Email == input.Email ||
                    (this.Email != null &&
                    this.Email.Equals(input.Email))
                ) && 
                (
                    this.IsAdmin == input.IsAdmin ||
                    (this.IsAdmin != null &&
                    this.IsAdmin.Equals(input.IsAdmin))
                ) && 
                (
                    this.IsAddedToApplications == input.IsAddedToApplications ||
                    (this.IsAddedToApplications != null &&
                    this.IsAddedToApplications.Equals(input.IsAddedToApplications))
                ) && 
                (
                    this.ApplicationRoleId == input.ApplicationRoleId ||
                    (this.ApplicationRoleId != null &&
                    this.ApplicationRoleId.Equals(input.ApplicationRoleId))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Email != null)
                    hashCode = hashCode * 59 + this.Email.GetHashCode();
                if (this.IsAdmin != null)
                    hashCode = hashCode * 59 + this.IsAdmin.GetHashCode();
                if (this.IsAddedToApplications != null)
                    hashCode = hashCode * 59 + this.IsAddedToApplications.GetHashCode();
                if (this.ApplicationRoleId != null)
                    hashCode = hashCode * 59 + this.ApplicationRoleId.GetHashCode();
                return hashCode;
            }
        }

    }
}

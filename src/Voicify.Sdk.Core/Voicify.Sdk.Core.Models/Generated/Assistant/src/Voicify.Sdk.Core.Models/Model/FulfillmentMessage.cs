/* 
 * Voicify Assistant API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: V1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;


namespace Voicify.Sdk.Core.Models.Model
{
    /// <summary>
    /// FulfillmentMessage
    /// </summary>
    [DataContract]
    public partial class FulfillmentMessage :  IEquatable<FulfillmentMessage>
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="FulfillmentMessage" /> class.
        /// </summary>
        /// <param name="platform">platform.</param>
        /// <param name="text">text.</param>
        /// <param name="image">image.</param>
        /// <param name="card">card.</param>
        /// <param name="basicCard">basicCard.</param>
        /// <param name="payload">payload.</param>
        /// <param name="suggestions">suggestions.</param>
        /// <param name="listSelect">listSelect.</param>
        /// <param name="carouselSelect">carouselSelect.</param>
        /// <param name="simpleResponses">simpleResponses.</param>
        public FulfillmentMessage(string platform = default(string), FulfillmentText text = default(FulfillmentText), FulfillmentImage image = default(FulfillmentImage), FulfillmentCard card = default(FulfillmentCard), FulfillmentBasicCard basicCard = default(FulfillmentBasicCard), Object payload = default(Object), FulfillmentSuggestions suggestions = default(FulfillmentSuggestions), FulfillmentListSelect listSelect = default(FulfillmentListSelect), FulfillmentCarouselSelect carouselSelect = default(FulfillmentCarouselSelect), FulfillmentSimpleResponses simpleResponses = default(FulfillmentSimpleResponses))
        {
            this.Platform = platform;
            this.Text = text;
            this.Image = image;
            this.Card = card;
            this.BasicCard = basicCard;
            this.Payload = payload;
            this.Suggestions = suggestions;
            this.ListSelect = listSelect;
            this.CarouselSelect = carouselSelect;
            this.SimpleResponses = simpleResponses;
        }
        
        /// <summary>
        /// Gets or Sets Platform
        /// </summary>
        [DataMember(Name="platform", EmitDefaultValue=false)]
        public string Platform { get; set; }

        /// <summary>
        /// Gets or Sets Text
        /// </summary>
        [DataMember(Name="text", EmitDefaultValue=false)]
        public FulfillmentText Text { get; set; }

        /// <summary>
        /// Gets or Sets Image
        /// </summary>
        [DataMember(Name="image", EmitDefaultValue=false)]
        public FulfillmentImage Image { get; set; }

        /// <summary>
        /// Gets or Sets Card
        /// </summary>
        [DataMember(Name="card", EmitDefaultValue=false)]
        public FulfillmentCard Card { get; set; }

        /// <summary>
        /// Gets or Sets BasicCard
        /// </summary>
        [DataMember(Name="basicCard", EmitDefaultValue=false)]
        public FulfillmentBasicCard BasicCard { get; set; }

        /// <summary>
        /// Gets or Sets Payload
        /// </summary>
        [DataMember(Name="payload", EmitDefaultValue=false)]
        public Object Payload { get; set; }

        /// <summary>
        /// Gets or Sets Suggestions
        /// </summary>
        [DataMember(Name="suggestions", EmitDefaultValue=false)]
        public FulfillmentSuggestions Suggestions { get; set; }

        /// <summary>
        /// Gets or Sets ListSelect
        /// </summary>
        [DataMember(Name="listSelect", EmitDefaultValue=false)]
        public FulfillmentListSelect ListSelect { get; set; }

        /// <summary>
        /// Gets or Sets CarouselSelect
        /// </summary>
        [DataMember(Name="carouselSelect", EmitDefaultValue=false)]
        public FulfillmentCarouselSelect CarouselSelect { get; set; }

        /// <summary>
        /// Gets or Sets SimpleResponses
        /// </summary>
        [DataMember(Name="simpleResponses", EmitDefaultValue=false)]
        public FulfillmentSimpleResponses SimpleResponses { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class FulfillmentMessage {\n");
            sb.Append("  Platform: ").Append(Platform).Append("\n");
            sb.Append("  Text: ").Append(Text).Append("\n");
            sb.Append("  Image: ").Append(Image).Append("\n");
            sb.Append("  Card: ").Append(Card).Append("\n");
            sb.Append("  BasicCard: ").Append(BasicCard).Append("\n");
            sb.Append("  Payload: ").Append(Payload).Append("\n");
            sb.Append("  Suggestions: ").Append(Suggestions).Append("\n");
            sb.Append("  ListSelect: ").Append(ListSelect).Append("\n");
            sb.Append("  CarouselSelect: ").Append(CarouselSelect).Append("\n");
            sb.Append("  SimpleResponses: ").Append(SimpleResponses).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as FulfillmentMessage);
        }

        /// <summary>
        /// Returns true if FulfillmentMessage instances are equal
        /// </summary>
        /// <param name="input">Instance of FulfillmentMessage to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(FulfillmentMessage input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Platform == input.Platform ||
                    (this.Platform != null &&
                    this.Platform.Equals(input.Platform))
                ) && 
                (
                    this.Text == input.Text ||
                    (this.Text != null &&
                    this.Text.Equals(input.Text))
                ) && 
                (
                    this.Image == input.Image ||
                    (this.Image != null &&
                    this.Image.Equals(input.Image))
                ) && 
                (
                    this.Card == input.Card ||
                    (this.Card != null &&
                    this.Card.Equals(input.Card))
                ) && 
                (
                    this.BasicCard == input.BasicCard ||
                    (this.BasicCard != null &&
                    this.BasicCard.Equals(input.BasicCard))
                ) && 
                (
                    this.Payload == input.Payload ||
                    (this.Payload != null &&
                    this.Payload.Equals(input.Payload))
                ) && 
                (
                    this.Suggestions == input.Suggestions ||
                    (this.Suggestions != null &&
                    this.Suggestions.Equals(input.Suggestions))
                ) && 
                (
                    this.ListSelect == input.ListSelect ||
                    (this.ListSelect != null &&
                    this.ListSelect.Equals(input.ListSelect))
                ) && 
                (
                    this.CarouselSelect == input.CarouselSelect ||
                    (this.CarouselSelect != null &&
                    this.CarouselSelect.Equals(input.CarouselSelect))
                ) && 
                (
                    this.SimpleResponses == input.SimpleResponses ||
                    (this.SimpleResponses != null &&
                    this.SimpleResponses.Equals(input.SimpleResponses))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Platform != null)
                    hashCode = hashCode * 59 + this.Platform.GetHashCode();
                if (this.Text != null)
                    hashCode = hashCode * 59 + this.Text.GetHashCode();
                if (this.Image != null)
                    hashCode = hashCode * 59 + this.Image.GetHashCode();
                if (this.Card != null)
                    hashCode = hashCode * 59 + this.Card.GetHashCode();
                if (this.BasicCard != null)
                    hashCode = hashCode * 59 + this.BasicCard.GetHashCode();
                if (this.Payload != null)
                    hashCode = hashCode * 59 + this.Payload.GetHashCode();
                if (this.Suggestions != null)
                    hashCode = hashCode * 59 + this.Suggestions.GetHashCode();
                if (this.ListSelect != null)
                    hashCode = hashCode * 59 + this.ListSelect.GetHashCode();
                if (this.CarouselSelect != null)
                    hashCode = hashCode * 59 + this.CarouselSelect.GetHashCode();
                if (this.SimpleResponses != null)
                    hashCode = hashCode * 59 + this.SimpleResponses.GetHashCode();
                return hashCode;
            }
        }

    }

}

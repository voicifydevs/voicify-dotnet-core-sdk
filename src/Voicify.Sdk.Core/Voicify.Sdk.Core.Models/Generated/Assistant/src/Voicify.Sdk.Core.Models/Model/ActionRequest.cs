/* 
 * Voicify Assistant API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: V1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;


namespace Voicify.Sdk.Core.Models.Model
{
    /// <summary>
    /// ActionRequest
    /// </summary>
    [DataContract]
    public partial class ActionRequest :  IEquatable<ActionRequest>
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ActionRequest" /> class.
        /// </summary>
        /// <param name="responseId">responseId.</param>
        /// <param name="session">session.</param>
        /// <param name="queryResult">queryResult.</param>
        /// <param name="originalDetectIntentRequest">originalDetectIntentRequest.</param>
        public ActionRequest(string responseId = default(string), string session = default(string), ActionQueryResult queryResult = default(ActionQueryResult), OriginalDetectIntentRequest originalDetectIntentRequest = default(OriginalDetectIntentRequest))
        {
            this.ResponseId = responseId;
            this.Session = session;
            this.QueryResult = queryResult;
            this.OriginalDetectIntentRequest = originalDetectIntentRequest;
        }
        
        /// <summary>
        /// Gets or Sets ResponseId
        /// </summary>
        [DataMember(Name="responseId", EmitDefaultValue=false)]
        public string ResponseId { get; set; }

        /// <summary>
        /// Gets or Sets Session
        /// </summary>
        [DataMember(Name="session", EmitDefaultValue=false)]
        public string Session { get; set; }

        /// <summary>
        /// Gets or Sets QueryResult
        /// </summary>
        [DataMember(Name="queryResult", EmitDefaultValue=false)]
        public ActionQueryResult QueryResult { get; set; }

        /// <summary>
        /// Gets or Sets OriginalDetectIntentRequest
        /// </summary>
        [DataMember(Name="originalDetectIntentRequest", EmitDefaultValue=false)]
        public OriginalDetectIntentRequest OriginalDetectIntentRequest { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class ActionRequest {\n");
            sb.Append("  ResponseId: ").Append(ResponseId).Append("\n");
            sb.Append("  Session: ").Append(Session).Append("\n");
            sb.Append("  QueryResult: ").Append(QueryResult).Append("\n");
            sb.Append("  OriginalDetectIntentRequest: ").Append(OriginalDetectIntentRequest).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as ActionRequest);
        }

        /// <summary>
        /// Returns true if ActionRequest instances are equal
        /// </summary>
        /// <param name="input">Instance of ActionRequest to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(ActionRequest input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.ResponseId == input.ResponseId ||
                    (this.ResponseId != null &&
                    this.ResponseId.Equals(input.ResponseId))
                ) && 
                (
                    this.Session == input.Session ||
                    (this.Session != null &&
                    this.Session.Equals(input.Session))
                ) && 
                (
                    this.QueryResult == input.QueryResult ||
                    (this.QueryResult != null &&
                    this.QueryResult.Equals(input.QueryResult))
                ) && 
                (
                    this.OriginalDetectIntentRequest == input.OriginalDetectIntentRequest ||
                    (this.OriginalDetectIntentRequest != null &&
                    this.OriginalDetectIntentRequest.Equals(input.OriginalDetectIntentRequest))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.ResponseId != null)
                    hashCode = hashCode * 59 + this.ResponseId.GetHashCode();
                if (this.Session != null)
                    hashCode = hashCode * 59 + this.Session.GetHashCode();
                if (this.QueryResult != null)
                    hashCode = hashCode * 59 + this.QueryResult.GetHashCode();
                if (this.OriginalDetectIntentRequest != null)
                    hashCode = hashCode * 59 + this.OriginalDetectIntentRequest.GetHashCode();
                return hashCode;
            }
        }

    }

}

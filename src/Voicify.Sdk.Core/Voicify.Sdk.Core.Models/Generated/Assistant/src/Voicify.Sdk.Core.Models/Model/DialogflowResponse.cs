/* 
 * Voicify Assistant API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: V1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;


namespace Voicify.Sdk.Core.Models.Model
{
    /// <summary>
    /// DialogflowResponse
    /// </summary>
    [DataContract]
    public partial class DialogflowResponse :  IEquatable<DialogflowResponse>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="DialogflowResponse" /> class.
        /// </summary>
        /// <param name="fulfillmentText">fulfillmentText.</param>
        /// <param name="fulfillmentMessages">fulfillmentMessages.</param>
        /// <param name="source">source.</param>
        /// <param name="payload">payload.</param>
        /// <param name="outputContexts">outputContexts.</param>
        /// <param name="followupEventInput">followupEventInput.</param>
        public DialogflowResponse(string fulfillmentText = default(string), List<FulfillmentMessage> fulfillmentMessages = default(List<FulfillmentMessage>), string source = default(string), Dictionary<string, Object> payload = default(Dictionary<string, Object>), List<ActionOutputContext> outputContexts = default(List<ActionOutputContext>), FollowupEventInput followupEventInput = default(FollowupEventInput))
        {
            this.FulfillmentText = fulfillmentText;
            this.FulfillmentMessages = fulfillmentMessages;
            this.Source = source;
            this.Payload = payload;
            this.OutputContexts = outputContexts;
            this.FollowupEventInput = followupEventInput;
        }
        
        /// <summary>
        /// Gets or Sets FulfillmentText
        /// </summary>
        [DataMember(Name="fulfillmentText", EmitDefaultValue=false)]
        public string FulfillmentText { get; set; }

        /// <summary>
        /// Gets or Sets FulfillmentMessages
        /// </summary>
        [DataMember(Name="fulfillmentMessages", EmitDefaultValue=false)]
        public List<FulfillmentMessage> FulfillmentMessages { get; set; }

        /// <summary>
        /// Gets or Sets Source
        /// </summary>
        [DataMember(Name="source", EmitDefaultValue=false)]
        public string Source { get; set; }

        /// <summary>
        /// Gets or Sets Payload
        /// </summary>
        [DataMember(Name="payload", EmitDefaultValue=false)]
        public Dictionary<string, Object> Payload { get; set; }

        /// <summary>
        /// Gets or Sets OutputContexts
        /// </summary>
        [DataMember(Name="outputContexts", EmitDefaultValue=false)]
        public List<ActionOutputContext> OutputContexts { get; set; }

        /// <summary>
        /// Gets or Sets FollowupEventInput
        /// </summary>
        [DataMember(Name="followupEventInput", EmitDefaultValue=false)]
        public FollowupEventInput FollowupEventInput { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class DialogflowResponse {\n");
            sb.Append("  FulfillmentText: ").Append(FulfillmentText).Append("\n");
            sb.Append("  FulfillmentMessages: ").Append(FulfillmentMessages).Append("\n");
            sb.Append("  Source: ").Append(Source).Append("\n");
            sb.Append("  Payload: ").Append(Payload).Append("\n");
            sb.Append("  OutputContexts: ").Append(OutputContexts).Append("\n");
            sb.Append("  FollowupEventInput: ").Append(FollowupEventInput).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as DialogflowResponse);
        }

        /// <summary>
        /// Returns true if DialogflowResponse instances are equal
        /// </summary>
        /// <param name="input">Instance of DialogflowResponse to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(DialogflowResponse input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.FulfillmentText == input.FulfillmentText ||
                    (this.FulfillmentText != null &&
                    this.FulfillmentText.Equals(input.FulfillmentText))
                ) && 
                (
                    this.FulfillmentMessages == input.FulfillmentMessages ||
                    this.FulfillmentMessages != null &&
                    this.FulfillmentMessages.SequenceEqual(input.FulfillmentMessages)
                ) && 
                (
                    this.Source == input.Source ||
                    (this.Source != null &&
                    this.Source.Equals(input.Source))
                ) && 
                (
                    this.Payload == input.Payload ||
                    this.Payload != null &&
                    this.Payload.SequenceEqual(input.Payload)
                ) && 
                (
                    this.OutputContexts == input.OutputContexts ||
                    this.OutputContexts != null &&
                    this.OutputContexts.SequenceEqual(input.OutputContexts)
                ) && 
                (
                    this.FollowupEventInput == input.FollowupEventInput ||
                    (this.FollowupEventInput != null &&
                    this.FollowupEventInput.Equals(input.FollowupEventInput))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.FulfillmentText != null)
                    hashCode = hashCode * 59 + this.FulfillmentText.GetHashCode();
                if (this.FulfillmentMessages != null)
                    hashCode = hashCode * 59 + this.FulfillmentMessages.GetHashCode();
                if (this.Source != null)
                    hashCode = hashCode * 59 + this.Source.GetHashCode();
                if (this.Payload != null)
                    hashCode = hashCode * 59 + this.Payload.GetHashCode();
                if (this.OutputContexts != null)
                    hashCode = hashCode * 59 + this.OutputContexts.GetHashCode();
                if (this.FollowupEventInput != null)
                    hashCode = hashCode * 59 + this.FollowupEventInput.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}

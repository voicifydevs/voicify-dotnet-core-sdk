/* 
 * Voicify Assistant API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: V1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;


namespace Voicify.Sdk.Core.Models.Model
{
    /// <summary>
    /// AlexaSystem
    /// </summary>
    [DataContract]
    public partial class AlexaSystem :  IEquatable<AlexaSystem>
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="AlexaSystem" /> class.
        /// </summary>
        /// <param name="apiAccessToken">apiAccessToken.</param>
        /// <param name="apiEndpoint">apiEndpoint.</param>
        /// <param name="application">application.</param>
        /// <param name="user">user.</param>
        /// <param name="device">device.</param>
        public AlexaSystem(string apiAccessToken = default(string), string apiEndpoint = default(string), Application application = default(Application), User user = default(User), Device device = default(Device))
        {
            this.ApiAccessToken = apiAccessToken;
            this.ApiEndpoint = apiEndpoint;
            this.Application = application;
            this.User = user;
            this.Device = device;
        }
        
        /// <summary>
        /// Gets or Sets ApiAccessToken
        /// </summary>
        [DataMember(Name="apiAccessToken", EmitDefaultValue=false)]
        public string ApiAccessToken { get; set; }

        /// <summary>
        /// Gets or Sets ApiEndpoint
        /// </summary>
        [DataMember(Name="apiEndpoint", EmitDefaultValue=false)]
        public string ApiEndpoint { get; set; }

        /// <summary>
        /// Gets or Sets Application
        /// </summary>
        [DataMember(Name="application", EmitDefaultValue=false)]
        public Application Application { get; set; }

        /// <summary>
        /// Gets or Sets User
        /// </summary>
        [DataMember(Name="user", EmitDefaultValue=false)]
        public User User { get; set; }

        /// <summary>
        /// Gets or Sets Device
        /// </summary>
        [DataMember(Name="device", EmitDefaultValue=false)]
        public Device Device { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class AlexaSystem {\n");
            sb.Append("  ApiAccessToken: ").Append(ApiAccessToken).Append("\n");
            sb.Append("  ApiEndpoint: ").Append(ApiEndpoint).Append("\n");
            sb.Append("  Application: ").Append(Application).Append("\n");
            sb.Append("  User: ").Append(User).Append("\n");
            sb.Append("  Device: ").Append(Device).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as AlexaSystem);
        }

        /// <summary>
        /// Returns true if AlexaSystem instances are equal
        /// </summary>
        /// <param name="input">Instance of AlexaSystem to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(AlexaSystem input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.ApiAccessToken == input.ApiAccessToken ||
                    (this.ApiAccessToken != null &&
                    this.ApiAccessToken.Equals(input.ApiAccessToken))
                ) && 
                (
                    this.ApiEndpoint == input.ApiEndpoint ||
                    (this.ApiEndpoint != null &&
                    this.ApiEndpoint.Equals(input.ApiEndpoint))
                ) && 
                (
                    this.Application == input.Application ||
                    (this.Application != null &&
                    this.Application.Equals(input.Application))
                ) && 
                (
                    this.User == input.User ||
                    (this.User != null &&
                    this.User.Equals(input.User))
                ) && 
                (
                    this.Device == input.Device ||
                    (this.Device != null &&
                    this.Device.Equals(input.Device))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.ApiAccessToken != null)
                    hashCode = hashCode * 59 + this.ApiAccessToken.GetHashCode();
                if (this.ApiEndpoint != null)
                    hashCode = hashCode * 59 + this.ApiEndpoint.GetHashCode();
                if (this.Application != null)
                    hashCode = hashCode * 59 + this.Application.GetHashCode();
                if (this.User != null)
                    hashCode = hashCode * 59 + this.User.GetHashCode();
                if (this.Device != null)
                    hashCode = hashCode * 59 + this.Device.GetHashCode();
                return hashCode;
            }
        }

    }

}
